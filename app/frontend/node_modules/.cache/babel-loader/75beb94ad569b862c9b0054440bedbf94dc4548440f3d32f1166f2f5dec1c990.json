{"ast":null,"code":"var _jsxFileName = \"/home/christina/udemy/webdev/wt23-naturdoc/app/frontend/src/components/ratings/RatingList.js\";\nimport RatingShow from \"./RatingShow\";\nimport { Box, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RatingList = _ref => {\n  let {\n    ratings\n  } = _ref;\n  const orderedRatings = ratings.slice().sort((a, b) => b.updated_at.localeCompare(a.updated_at));\n\n  /* REFACTOR: do not use array index in key */\n  const renderedRatings = orderedRatings.map(rating => {\n    const id = rating.ratingId;\n    return /*#__PURE__*/_jsxDEV(RatingShow, {\n      rating: rating\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 5\n      },\n      component: \"section\",\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"resultCount\",\n        children: [ratings.length, \" \", ratings.length === 1 ? 'review' : 'reviews']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this), renderedRatings]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_c = RatingList;\nexport default RatingList;\nvar _c;\n$RefreshReg$(_c, \"RatingList\");","map":{"version":3,"names":["RatingShow","Box","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","RatingList","_ref","ratings","orderedRatings","slice","sort","a","b","updated_at","localeCompare","renderedRatings","map","rating","id","ratingId","fileName","_jsxFileName","lineNumber","columnNumber","children","sx","mt","component","maxWidth","variant","length","_c","$RefreshReg$"],"sources":["/home/christina/udemy/webdev/wt23-naturdoc/app/frontend/src/components/ratings/RatingList.js"],"sourcesContent":["import RatingShow from \"./RatingShow\";\nimport {  Box, Typography } from \"@mui/material\";\n\nconst RatingList = ({ ratings }) => {\n\n\n  const orderedRatings = ratings.slice().sort((a, b) => b.updated_at.localeCompare(a.updated_at));\n    \n  /* REFACTOR: do not use array index in key */\n  const renderedRatings = orderedRatings.map((rating) => {\n    const id = rating.ratingId;\n    return <RatingShow key={id} rating={rating} />;\n  });\n\n  return (\n      <>\n          <Box sx={{ mt: 5 }} component=\"section\" maxWidth=\"md\">\n              <Typography variant=\"resultCount\">\n                  {ratings.length} {ratings.length === 1 ? 'review' : 'reviews'}\n              </Typography>\n              {renderedRatings}\n          </Box>\n      </>\n  );\n}\n\nexport default RatingList;\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,SAAUC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,UAAU,GAAGC,IAAA,IAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EAG7B,MAAME,cAAc,GAAGD,OAAO,CAACE,KAAK,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,UAAU,CAACC,aAAa,CAACH,CAAC,CAACE,UAAU,CAAC,CAAC;;EAE/F;EACA,MAAME,eAAe,GAAGP,cAAc,CAACQ,GAAG,CAAEC,MAAM,IAAK;IACrD,MAAMC,EAAE,GAAGD,MAAM,CAACE,QAAQ;IAC1B,oBAAOjB,OAAA,CAACJ,UAAU;MAAUmB,MAAM,EAAEA;IAAO,GAAnBC,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAoB;EAChD,CAAC,CAAC;EAEF,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACItB,OAAA,CAACH,GAAG;MAAC0B,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAACC,SAAS,EAAC,SAAS;MAACC,QAAQ,EAAC,IAAI;MAAAJ,QAAA,gBACjDtB,OAAA,CAACF,UAAU;QAAC6B,OAAO,EAAC,aAAa;QAAAL,QAAA,GAC5BjB,OAAO,CAACuB,MAAM,EAAC,GAAC,EAACvB,OAAO,CAACuB,MAAM,KAAK,CAAC,GAAG,QAAQ,GAAG,SAAS;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpD,EACZR,eAAe;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACd,iBACP;AAET,CAAC;AAAAQ,EAAA,GArBK1B,UAAU;AAuBhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}