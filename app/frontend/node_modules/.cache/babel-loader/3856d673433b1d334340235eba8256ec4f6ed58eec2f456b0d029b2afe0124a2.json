{"ast":null,"code":"var _jsxFileName = \"/home/christina/udemy/webdev/wt23-naturdoc/app/frontend/src/components/home/HomeRemedies.js\";\n// Material UI\nimport { Typography, Card, Container, CardMedia, Grid, Divider } from \"@mui/material\";\n//assets\nimport rosemary from \"assets/remedies/rosemary.jpg\";\nimport stingingNettle from \"assets/remedies/stinging-nettle.jpg\";\nimport garlic from \"assets/remedies/garlic.png\";\nimport turmeric from \"assets/remedies/turmeric.png\";\nimport HomeRemediesContent from \"./HomeRemediesContent\";\n\n// As of 2023-04-06, the Data Science API does not have a way to filter by season, nor to retrieve a unique \"common name for the remedy\" (e.g. \"rosemary\" instead of \"Rosmarinus officinalis\").\n// Therefore, the data below is hard-coded.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst season = \"spring\";\nconst springRemedies = [{\n  src: rosemary,\n  title: \"Rosemary\",\n  id: \"64283e77746bfc1f34fe56cd\"\n}, {\n  src: stingingNettle,\n  title: \"Stinging Nettle\",\n  id: \"64283e77746bfc1f34fe702f\"\n}, {\n  src: garlic,\n  title: \"Garlic\",\n  id: \"64283e77746bfc1f34fe415c\"\n}, {\n  src: turmeric,\n  title: \"Turmeric\",\n  id: \"64283e77746bfc1f34fe4d35\"\n}];\nconst HomeRemedies = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        pt: 2,\n        pb: 4\n      },\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h2\",\n        variant: \"h2\",\n        color: \"text.primary\",\n        paragraph: true,\n        children: [\"Remedies that help with \", season, \"time Allergies\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          py: 2,\n          flexDirection: 'column'\n        },\n        children: springRemedies.map((item, index) => {\n          const id = item.id;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 12,\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-start'\n              },\n              variant: \"homeCard\",\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                variant: \"homeRemedyImage\",\n                image: item.src,\n                alt: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(HomeRemediesContent, {\n                item: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end'\n              },\n              variant: \"homeCard\",\n              children: [/*#__PURE__*/_jsxDEV(HomeRemediesContent, {\n                item: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                variant: \"homeRemedyImage\",\n                image: item.src,\n                alt: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 31\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_c = HomeRemedies;\nexport default HomeRemedies;\nvar _c;\n$RefreshReg$(_c, \"HomeRemedies\");","map":{"version":3,"names":["Typography","Card","Container","CardMedia","Grid","Divider","rosemary","stingingNettle","garlic","turmeric","HomeRemediesContent","jsxDEV","_jsxDEV","Fragment","_Fragment","season","springRemedies","src","title","id","HomeRemedies","children","sx","pt","pb","maxWidth","component","variant","color","paragraph","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","py","flexDirection","map","item","index","xs","sm","md","display","justifyContent","image","alt","_c","$RefreshReg$"],"sources":["/home/christina/udemy/webdev/wt23-naturdoc/app/frontend/src/components/home/HomeRemedies.js"],"sourcesContent":["// Material UI\nimport { Typography, Card, Container, CardMedia,  Grid, Divider } from \"@mui/material\";\n//assets\nimport rosemary from \"assets/remedies/rosemary.jpg\";\nimport stingingNettle from \"assets/remedies/stinging-nettle.jpg\";\nimport garlic from \"assets/remedies/garlic.png\";\nimport turmeric from \"assets/remedies/turmeric.png\";\nimport HomeRemediesContent from \"./HomeRemediesContent\";\n\n// As of 2023-04-06, the Data Science API does not have a way to filter by season, nor to retrieve a unique \"common name for the remedy\" (e.g. \"rosemary\" instead of \"Rosmarinus officinalis\").\n// Therefore, the data below is hard-coded.\nconst season = \"spring\";\n\nconst springRemedies = [\n    {\n      src: rosemary, \n      title: \"Rosemary\",\n      id: \"64283e77746bfc1f34fe56cd\",\n    },\n    {\n      src: stingingNettle,\n      title: \"Stinging Nettle\",\n      id: \"64283e77746bfc1f34fe702f\",\n    },\n    {\n      src: garlic,\n      title: \"Garlic\",\n      id: \"64283e77746bfc1f34fe415c\",\n    },\n    {\n      src: turmeric,\n      title: \"Turmeric\",\n      id: \"64283e77746bfc1f34fe4d35\",\n    },\n  ];\n\nconst HomeRemedies = () => {\n  return (\n      <>\n          <Container sx={{ pt: 2, pb: 4 }} maxWidth=\"md\">\n              <Typography\n                  component=\"h2\"\n                  variant=\"h2\"\n                  color=\"text.primary\"\n                  paragraph\n              >\n                  Remedies that help with {season}time Allergies\n              </Typography>\n              <Divider />\n              <Grid\n                  container\n                  spacing={3}\n                  sx={{ py: 2, flexDirection: 'column' }}\n              >\n                  {springRemedies.map((item, index) => {\n                    const id = item.id;\n                        return (\n                      <Grid item key={id} xs={12} sm={12} md={12}>\n                          {index % 2 === 0 ? (\n                              <Card\n                                  sx={{ display: 'flex', justifyContent: 'flex-start', }}\n                                  variant=\"homeCard\"\n                              >\n                                  <CardMedia\n                                      component=\"img\"\n                                      variant=\"homeRemedyImage\"\n                                      image={item.src}\n                                      alt={item.title}\n                                  />\n                                  <HomeRemediesContent item={item} />\n\n                              </Card>\n                          ) : (\n                              <Card\n                                  sx={{\n                                      display: 'flex',\n                                      justifyContent: 'flex-end',\n                                  }}\n                                  variant=\"homeCard\"\n                              >\n                                  <HomeRemediesContent item={item} />\n                                  <CardMedia\n                                      component=\"img\"\n                                      variant=\"homeRemedyImage\"\n                                      image={item.src}\n                                      alt={item.title}\n                                  />\n                              </Card>\n                          )}\n                      </Grid>\n                    );\n                  })}\n              </Grid>\n          </Container>\n      </>\n  );\n}\n\nexport default HomeRemedies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}